{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Silvia\\\\Desktop\\\\Pr\\xE1cticas Typescript\\\\ejercicios\\\\src\\\\examples\\\\StateHooksComponent.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, Row, Col } from \"antd\";\n\nconst StateHooksComponent = ({}) => {\n  const [name, setName] = useState('');\n  const [address, setAddress] = useState('');\n  useEffect(() => {\n    console.log('Component mounted');\n    return () => {\n      console.log('Component will be unmount');\n    };\n  }, []);\n  useEffect(() => {\n    console.log(`Any state changed Name: ${name}, Address: ${address}`);\n  });\n  useEffect(() => {\n    console.log(`Name changed: ${name}`);\n  }, [name]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(name);\n  };\n\n  const onNameChange = e => {\n    setName(e.target.value);\n  };\n\n  const onAddressChange = e => {\n    setAddress(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"State Hooks component\"), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    offset: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    layout: \"inline\",\n    onSubmitCapture: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"name\",\n    value: name,\n    onChange: onNameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"address\",\n    value: address,\n    onChange: onAddressChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Submit\"))))));\n};\n\nexport default StateHooksComponent;","map":{"version":3,"sources":["C:/Users/Silvia/Desktop/Pr√°cticas Typescript/ejercicios/src/examples/StateHooksComponent.tsx"],"names":["React","useState","useEffect","Form","Input","Button","Row","Col","StateHooksComponent","name","setName","address","setAddress","console","log","handleSubmit","e","preventDefault","onNameChange","target","value","onAddressChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAkDC,SAAlD,QAAmE,OAAnE;AACA,OAAO,oBAAP;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,MAArB,EAA6BC,GAA7B,EAAkCC,GAAlC,QAA4C,MAA5C;;AAQA,MAAMC,mBAAoC,GAAG,CAAC,EAAD,KAAQ;AAEjD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAS,EAAT,CAAhC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAS,EAAT,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,WAAO,MAAM;AACTD,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;AAOAZ,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,OAAO,CAACC,GAAR,CAAa,2BAA0BL,IAAK,cAAaE,OAAQ,EAAjE;AACH,GAFQ,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBL,IAAK,EAAlC;AACH,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;AAIA,QAAMM,YAAY,GAAIC,CAAD,IAAmC;AACpDA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACH,GAHD;;AAKA,QAAMS,YAAY,GAAIF,CAAD,IAAsC;AACvDN,IAAAA,OAAO,CAACM,CAAC,CAACG,MAAF,CAASC,KAAV,CAAP;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAIL,CAAD,IAAsC;AAC1DJ,IAAAA,UAAU,CAACI,CAAC,CAACG,MAAF,CAASC,KAAV,CAAV;AACH,GAFD;;AAIA,sBACI,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADA,eAEA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAe,IAAA,MAAM,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAC,QAAb;AAAsB,IAAA,eAAe,EAAEL,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,MAA/B;AAAsC,IAAA,KAAK,EAAEN,IAA7C;AAAmD,IAAA,QAAQ,EAAES,YAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,WAAW,EAAC,SAAhC;AAA0C,IAAA,KAAK,EAAEP,OAAjD;AAA0D,IAAA,QAAQ,EAAEU,eAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAA0B,IAAA,IAAI,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CADA,CADJ,CADJ,CAFA,CADJ;AAiBH,CAlDD;;AAoDA,eAAeb,mBAAf","sourcesContent":["import React, { useState, FormEvent, ChangeEvent, useEffect } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {Form, Input, Button, Row, Col} from \"antd\";\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst StateHooksComponent: React.FC<Props> = ({}) => {\r\n\r\n    const [name, setName] = useState<string>('');\r\n    const [address, setAddress] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        console.log('Component mounted');\r\n        return () => {\r\n            console.log('Component will be unmount')\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(`Any state changed Name: ${name}, Address: ${address}`);\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log(`Name changed: ${name}`);\r\n    }, [name]);\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        console.log(name);\r\n    }\r\n\r\n    const onNameChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const onAddressChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAddress(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h2>State Hooks component</h2>\r\n        <Row>\r\n            <Col span={12} offset={6}>\r\n                <Form layout=\"inline\" onSubmitCapture={handleSubmit}>\r\n                <Form.Item>\r\n                    <Input type=\"text\" placeholder=\"name\" value={name} onChange={onNameChange} /> \r\n                    <Input  type=\"text\" placeholder=\"address\" value={address} onChange={onAddressChange}/>\r\n                    <Button htmlType=\"submit\" type=\"primary\">Submit</Button>\r\n                </Form.Item>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default StateHooksComponent;"]},"metadata":{},"sourceType":"module"}