{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Silvia\\\\Desktop\\\\Pr\\xE1cticas Typescript\\\\react-task-app\\\\src\\\\App.tsx\";\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [newTask, setNewTask] = useState('');\n  const [tasks, setTasks] = useState([]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addTask(newTask);\n    setNewTask('');\n    console.log(tasks);\n  };\n\n  const addTask = name => {\n    const newTasks = [...tasks, {\n      name,\n      done: false\n    }];\n    setTasks(newTasks);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => setNewTask(e.target.value),\n    value: newTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Save\")));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Silvia/Desktop/Pr√°cticas Typescript/react-task-app/src/App.tsx"],"names":["React","useState","App","newTask","setNewTask","tasks","setTasks","handleSubmit","e","preventDefault","addTask","console","log","name","newTasks","done","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAQA,SAASC,GAAT,GAA4B;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAS,EAAT,CAAtC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAU,EAAV,CAAlC;;AAEA,QAAMM,YAAY,GAAIC,CAAD,IAAoB;AACvCA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACP,OAAD,CAAP;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACD,GALD;;AAOA,QAAMK,OAAO,GAAIG,IAAD,IAAkB;AAChC,UAAMC,QAAiB,GAAG,CAAC,GAAGT,KAAJ,EAAW;AAACQ,MAAAA,IAAD;AAAOE,MAAAA,IAAI,EAAC;AAAZ,KAAX,CAA1B;AACAT,IAAAA,QAAQ,CAACQ,QAAD,CAAR;AACD,GAHD;;AAKA,sBACE,uDACE;AAAM,IAAA,QAAQ,EAAEP,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAGC,CAAC,IAAIJ,UAAU,CAACI,CAAC,CAACQ,MAAF,CAASC,KAAV,CAA7C;AAA+D,IAAA,KAAK,EAAEd,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADF,CADF;AASD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState } from 'react';\n\ntype formElement = React.FormEvent<HTMLFormElement>;\ninterface ITask {\n  name: string;\n  done: boolean;\n}\n\nfunction App(): JSX.Element {\n  const [newTask, setNewTask] = useState<string>('');\n  const [tasks, setTasks] = useState<ITask[]>([]);\n\n  const handleSubmit = (e: formElement) => {\n    e.preventDefault();\n    addTask(newTask)\n    setNewTask('');\n    console.log(tasks)\n  }\n\n  const addTask = (name: string) => {\n    const newTasks: ITask[] = [...tasks, {name, done:false}]\n    setTasks(newTasks)\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" onChange={ e => setNewTask(e.target.value)} value={newTask}/>\n        <button>Save</button>\n      </form>\n\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}